From 1ba8b9150d99ae1913dcd5e9aaec9169d2516d7e Mon Sep 17 00:00:00 2001
From: Luke Cesarz <lucesarz@gmail.com>
Date: Wed, 29 Aug 2018 23:20:48 -0500
Subject: [PATCH] Task 11 of eudyptula

---
 drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c | 27 +++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c
index 8f98629fbe59..5ffc0597f28f 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c
@@ -32,7 +32,8 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/nospec.h>
-
+#define MESSAGERINO "Luke is King\n"
+#define MSGERINO_SIZE sizeof(MESSAGERINO)
 static int amdgpu_debugfs_pm_init(struct amdgpu_device *adev);
 
 static const struct cg_flag_name clocks[] = {
@@ -933,7 +934,25 @@ static ssize_t amdgpu_get_busy_percent(struct device *dev,
 	return snprintf(buf, PAGE_SIZE, "%d\n", value);
 }
 
+static ssize_t id_show(struct device *dev, struct device_attribute *attr,
+		       char *buf)
+{
+	const char* tmp = MESSAGERINO;
+	strncpy(buf, tmp, MSGERINO_SIZE);
+	return MSGERINO_SIZE;
+}
+
+static ssize_t id_store(struct device *dev, struct device_attribute *attr,
+                         const char *buf, size_t count)
+{
+        if(strncmp(buf, MESSAGERINO, MSGERINO_SIZE - 1))
+                return -EINVAL;
+        else
+                return count;
+}
+
 static DEVICE_ATTR(power_dpm_state, S_IRUGO | S_IWUSR, amdgpu_get_dpm_state, amdgpu_set_dpm_state);
+static DEVICE_ATTR(id, 0644, id_show, id_store);
 static DEVICE_ATTR(power_dpm_force_performance_level, S_IRUGO | S_IWUSR,
 		   amdgpu_get_dpm_forced_performance_level,
 		   amdgpu_set_dpm_forced_performance_level);
@@ -1799,6 +1818,11 @@ int amdgpu_pm_sysfs_init(struct amdgpu_device *adev)
 		return ret;
 	}
 
+	ret = device_create_file(adev->dev, &dev_attr_id);
+	if (ret) {
+		DRM_ERROR("failed to create device file for dpm state\n");
+		return ret;
+	}
 	ret = device_create_file(adev->dev, &dev_attr_power_dpm_state);
 	if (ret) {
 		DRM_ERROR("failed to create device file for dpm state\n");
@@ -1897,6 +1921,7 @@ void amdgpu_pm_sysfs_fini(struct amdgpu_device *adev)
 	if (adev->pm.int_hwmon_dev)
 		hwmon_device_unregister(adev->pm.int_hwmon_dev);
 	device_remove_file(adev->dev, &dev_attr_power_dpm_state);
+	device_remove_file(adev->dev, &dev_attr_id);
 	device_remove_file(adev->dev, &dev_attr_power_dpm_force_performance_level);
 
 	device_remove_file(adev->dev, &dev_attr_pp_num_states);
-- 
2.17.1

